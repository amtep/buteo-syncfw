/*
 * This file is part of buteo-syncfw package
 *
 * Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * Contact: Sateesh Kavuri <sateesh.kavuri@nokia.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * version 2.1 as published by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 *
 */

/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -a SyncDBusAdaptor -c SyncDBusAdaptor com.nokia.msyncd.xml
 *
 * qdbusxml2cpp is Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "SyncDBusAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

using namespace Buteo;
/*
 * Implementation of adaptor class SyncDBusAdaptor
 */

SyncDBusAdaptor::SyncDBusAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

SyncDBusAdaptor::~SyncDBusAdaptor()
{
    // destructor
}

void SyncDBusAdaptor::abortSync(const QString &aProfileName)
{
    // handle method call com.nokia.msyncd.abortSync
    QMetaObject::invokeMethod(parent(), "abortSync", Q_ARG(QString, aProfileName));
}

void SyncDBusAdaptor::profileChanged(const QString &aProfileName)
{
    // handle method call com.nokia.msyncd.profileChanged
    QMetaObject::invokeMethod(parent(), "profileChanged", Q_ARG(QString, aProfileName));
}

void SyncDBusAdaptor::profileDeleted(const QString &aProfileName)
{
    // handle method call com.nokia.msyncd.profileDeleted
    QMetaObject::invokeMethod(parent(), "profileDeleted", Q_ARG(QString, aProfileName));
}

void SyncDBusAdaptor::releaseStorages(const QStringList &aStorageNames)
{
    // handle method call com.nokia.msyncd.releaseStorages
    QMetaObject::invokeMethod(parent(), "releaseStorages", Q_ARG(QStringList, aStorageNames));
}

bool SyncDBusAdaptor::requestStorages(const QStringList &aStorageNames)
{
    // handle method call com.nokia.msyncd.requestStorages
    bool out0;
    QMetaObject::invokeMethod(parent(), "requestStorages", Q_RETURN_ARG(bool, out0), Q_ARG(QStringList, aStorageNames));
    return out0;
}

QStringList SyncDBusAdaptor::runningSyncs()
{
    // handle method call com.nokia.msyncd.runningSyncs
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "runningSyncs", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

bool SyncDBusAdaptor::startSync(const QString &aProfileName)
{
    // handle method call com.nokia.msyncd.startSync
    bool out0;
    QMetaObject::invokeMethod(parent(), "startSync", Q_RETURN_ARG(bool, out0), Q_ARG(QString, aProfileName));
    return out0;
}

